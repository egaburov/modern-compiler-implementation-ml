%%
%term
    EOF
  | ID of string
  | INT of int | STRING of string
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK
  | LBRACE | RBRACE | DOT
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF
  | BREAK | NIL
  | FUNCTION | VAR | TYPE
  | UMINUS

%nonterm
    empty
  | dec | decs | tydec | ty | tyfields | vardec | fundec
  | exp | optionalexp | explist | recordargs | recordexp
  | lvalue | lvalue_not_id
  | program

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE
	DO OF NIL

%prefer THEN ELSE LPAREN

%right SEMICOLON
%left THEN
%left DO OF ELSE
%left ASSIGN
%left AND OR
%nonassoc EQ NEQ GT GE LT LE
%left PLUS MINUS
%left TIMES DIVIDE
%left UMINUS

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

program	: exp   				                                    ()

empty :                                                             ()


decs : dec                                                          ()
     | decs dec                                                     ()

dec : tydec                                                         ()
    | vardec                                                        ()
    | fundec                                                        ()

tydec : TYPE ID EQ ty                                               ()

ty : ID                                                             ()
   | LBRACE tyfields RBRACE                                         ()
   | ARRAY OF ID                                                    ()

tyfields : ID COLON ID                                              ()
         | ID COLON ID COMMA tyfields                               ()
         | empty                                                    ()

vardec : VAR ID ASSIGN exp                                          ()
       | VAR ID COLON ID ASSIGN exp                                 ()

fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp                  ()
       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp         ()


optionalexp : exp                                                   ()
            | empty                                                 ()

explist : empty                                                     ()
        | exp                                                       ()
        | explist COMMA exp                                         ()

recordargs : empty                                                  ()
           | ID EQ exp                                              ()
           | recordargs COMMA ID EQ exp                             ()


recordexp : ID LPAREN explist RPAREN                                ()
          | ID LBRACE recordargs RBRACE                             ()
          | ID NIL                                                  ()

exp : ID                                                            ()
    | NIL                                                           ()
    | MINUS exp %prec UMINUS                                        ()
    | INT                                                           ()
    | STRING                                                        ()
    | LPAREN RPAREN                                                 ()
    | recordexp                                                     ()
    | exp PLUS exp                                                  ()
    | exp MINUS exp                                                 ()
    | exp TIMES exp                                                 ()
    | exp DIVIDE exp                                                ()
    | exp EQ exp                                                    ()
    | exp NEQ exp                                                   ()
    | exp GT exp                                                    ()
    | exp GE exp                                                    ()
    | exp LT exp                                                    ()
    | exp LE exp                                                    ()
    | exp AND exp                                                   ()
    | exp OR exp                                                    ()
    | ID LBRACK exp RBRACK OF exp                                   ()
    | lvalue_not_id                                                 ()
    | lvalue ASSIGN exp                                             ()
    | IF exp THEN exp ELSE exp                                      ()
    | IF exp THEN exp                                               ()
    | WHILE exp DO exp                                              ()
    | FOR ID ASSIGN exp TO exp DO exp                               ()
    | LET decs IN optionalexp END                                   ()
    | BREAK                                                         ()
    | LPAREN exp RPAREN                                             ()
    | exp SEMICOLON exp                                             ()


lvalue: ID                                                          ()
      | lvalue_not_id                                               ()

lvalue_not_id : lvalue DOT ID                                       ()
              | ID LBRACK exp RBRACK                                ()
              | lvalue_not_id LBRACK exp RBRACK                     ()
